pip install opencv-python mediapipe flask
npx create-react-app voting-page cd voting-page npm start
from flask import Flask, render_template, Response import cv2 import mediapipe as mp app = Flask(__name__) # Initialize MediaPipe Hands mp_hands = mp.solutions.hands hands = mp_hands.Hands(min_detection_confidence=0.5, min_tracking_confidence=0.5) # Function to generate frames for video streaming def gen_frames(): cap = cv2.VideoCapture(0) while True: success, frame = cap.read() if not success: break # Convert the frame to RGB rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB) # Process the frame with MediaPipe Hands results = hands.process(rgb_frame) if results.multi_hand_landmarks: for hand_landmarks in results.multi_hand_landmarks: mp_drawing = mp.solutions.drawing_utils mp_drawing.draw_landmarks(frame, hand_landmarks, mp_hands.HAND_CONNECTIONS) # Convert the frame back to BGR and encode it to JPEG ret, buffer = cv2.imencode('.jpg', frame) frame = buffer.tobytes() yield (b'--frame\r\n' b'Content-Type: image/jpeg\r\n\r\n' + frame + b'\r\n') @app.route('/') def index(): return render_template('index.html') @app.route('/video_feed') def video_feed(): return Response(gen_frames(), mimetype='multipart/x-mixed-replace; boundary=frame') if __name__ == '__main__': app.run(debug=True)

<!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>Voting Page</title> </head> <body> <h1>Voting Page</h1> <img src="{{ url_for('video_feed') }}" height="480" width="640"> <script> // Add a warning message if the page freezes document.addEventListener('visibilitychange', function() { if (document.hidden) { alert('Warning: The page has frozen!'); } }); </script> </body> </html>

import React, { useEffect, useState } from 'react'; import './App.css'; function App() { const [videoFeed, setVideoFeed] = useState(''); useEffect(() => { fetch('/video_feed') .then(response => response.blob()) .then(blob => { const url = URL.createObjectURL(blob); setVideoFeed(url); }); }, []); return ( <div className="App"> <h1>Voting Page</h1> <img src={videoFeed} alt="Video Feed" /> </div> ); } export default App;

python app.py

npm start